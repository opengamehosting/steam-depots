---
name: Build
on:
  push:
    branches:
      - master
permissions: read-all
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Check out
        uses: actions/checkout@v1
        with:
          fetch-depth: 0
      - name: Setup bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: 1.0.15
      - name: Validate JSON files
        run: >
          find . -name "*.json" | xargs -L1 bunx jsonlint@1.6.3 --quiet --compact
  builder:
    needs: lint
    name: Builder
    runs-on: self-hosted
    strategy:
      matrix:
        depotId:
          - 896661
      fail-fast: false
      max-parallel: 1
    permissions:
      contents: read
      packages: write
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4
      - name: Setup jq
        uses: dcarbone/install-jq-action@v2
        with:
          version: "1.7"
          force: false
      - id: depot
        run: |
          echo "game=$(cat depots.json | jq -rcM '.["${{ matrix.depotId }}"].game' | tr -d '\n\r')" >> $GITHUB_OUTPUT
          echo "manifest=$(cat depots.json | jq -rcM '.["${{ matrix.depotId }}"].manifest' | tr -d '\n\r')" >> $GITHUB_OUTPUT
          echo "manifestName=$(cat depots.json | jq -rcM '.["${{ matrix.depotId }}"].name' | tr -d '\n\r')" >> $GITHUB_OUTPUT
          echo "steamAppId=$(cat depots.json | jq -rcM '.["${{ matrix.depotId }}"].steamAppId' | tr -d '\n\r')" >> $GITHUB_OUTPUT
          echo "manifestId=$(cat depots.json | jq -rcM '.["${{ matrix.depotId }}"].manifestId' | tr -d '\n\r')" >> $GITHUB_OUTPUT
      - run: mkdir -p maFiles
      - uses: mobiledevops/secret-to-file-action@v1
        with:
          base64-encoded-secret: ${{ secrets.MAFILE }}
          filename: "maFiles/steam.maFile"
      - uses: mobiledevops/secret-to-file-action@v1
        with:
          base64-encoded-secret: ${{ secrets.STEAM_GUARD_MANIFEST }}
          filename: "maFiles/manifest.json"
      - name: Log in to the Container registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
      - name: Build and push Docker image
        uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671
        with:
          build-args: |
            STEAM_USERNAME=${{ secrets.STEAM_USERNAME }}
            STEAM_PASSWORD=${{ secrets.STEAM_PASSWORD }}
            GAME=${{ steps.depot.outputs.game }}
            STEAM_APP_ID=${{ steps.depot.outputs.steamAppId }}
            DEPOT_ID=${{ matrix.depotId }}
            MANIFEST_ID=${{ steps.depot.outputs.manifestId }}
          secret-files: |
            maFile=maFiles/steam.maFile
            maManifest=maFiles/manifest.json
          context: .
          file: ./Dockerfile
          push: ${{ github.event_name == 'push' }}
          #tags: ${{ steps.meta.outputs.tags }}
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.depot.outputs.game }}-${{ steps.depot.outputs.manifestName }}-latest, ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.depot.outputs.game }}-${{ matrix.depotId }}-${{ steps.depot.outputs.manifestId }}
          labels: ${{ steps.meta.outputs.labels }}
